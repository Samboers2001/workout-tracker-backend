// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using workout_tracker_backend.Data;

#nullable disable

namespace workout_tracker_backend.Migrations
{
    [DbContext(typeof(WorkoutTrackerDbContext))]
    [Migration("20221005091418_NullableWeightLiftedLastWeekMigrations")]
    partial class NullableWeightLiftedLastWeekMigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("ExerciseWorkout", b =>
                {
                    b.Property<int>("ExercisesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorkoutsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ExercisesId", "WorkoutsId");

                    b.HasIndex("WorkoutsId");

                    b.ToTable("ExerciseWorkout");
                });

            modelBuilder.Entity("workout_tracker_backend.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("workout_tracker_backend.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("workout_tracker_backend.Models.ExerciseSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorkoutSessionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("WorkoutSessionId");

                    b.ToTable("ExerciseSessions");
                });

            modelBuilder.Entity("workout_tracker_backend.Models.Set", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Reps")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Weight")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.ToTable("Sets");
                });

            modelBuilder.Entity("workout_tracker_backend.Models.SetSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExerciseSessionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Reps")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SetId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Weight")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseSessionId");

                    b.HasIndex("SetId");

                    b.ToTable("SetSessions");
                });

            modelBuilder.Entity("workout_tracker_backend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Height")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Weight")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("WeightLiftedLastWeek")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("workout_tracker_backend.Models.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalWeight")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("WorkoutTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("workout_tracker_backend.Models.WorkoutSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("End")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Start")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalWeight")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("WorkoutId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("WorkoutSessions");
                });

            modelBuilder.Entity("ExerciseWorkout", b =>
                {
                    b.HasOne("workout_tracker_backend.Models.Exercise", null)
                        .WithMany()
                        .HasForeignKey("ExercisesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("workout_tracker_backend.Models.Workout", null)
                        .WithMany()
                        .HasForeignKey("WorkoutsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("workout_tracker_backend.Models.Exercise", b =>
                {
                    b.HasOne("workout_tracker_backend.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("workout_tracker_backend.Models.User", "User")
                        .WithMany("Exercises")
                        .HasForeignKey("UserId");

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("workout_tracker_backend.Models.ExerciseSession", b =>
                {
                    b.HasOne("workout_tracker_backend.Models.Exercise", "Exercise")
                        .WithMany("ExerciseSessions")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("workout_tracker_backend.Models.WorkoutSession", "WorkoutSession")
                        .WithMany("ExerciseSessions")
                        .HasForeignKey("WorkoutSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("WorkoutSession");
                });

            modelBuilder.Entity("workout_tracker_backend.Models.Set", b =>
                {
                    b.HasOne("workout_tracker_backend.Models.Exercise", "Exercise")
                        .WithMany("Sets")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("workout_tracker_backend.Models.SetSession", b =>
                {
                    b.HasOne("workout_tracker_backend.Models.ExerciseSession", "ExerciseSession")
                        .WithMany("SetSessions")
                        .HasForeignKey("ExerciseSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("workout_tracker_backend.Models.Set", "Set")
                        .WithMany("SetSessions")
                        .HasForeignKey("SetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExerciseSession");

                    b.Navigation("Set");
                });

            modelBuilder.Entity("workout_tracker_backend.Models.Workout", b =>
                {
                    b.HasOne("workout_tracker_backend.Models.User", "User")
                        .WithMany("Workouts")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("workout_tracker_backend.Models.WorkoutSession", b =>
                {
                    b.HasOne("workout_tracker_backend.Models.User", "User")
                        .WithMany("WorkoutSessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("workout_tracker_backend.Models.Workout", "Workout")
                        .WithMany("WorkoutSessions")
                        .HasForeignKey("WorkoutId");

                    b.Navigation("User");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("workout_tracker_backend.Models.Exercise", b =>
                {
                    b.Navigation("ExerciseSessions");

                    b.Navigation("Sets");
                });

            modelBuilder.Entity("workout_tracker_backend.Models.ExerciseSession", b =>
                {
                    b.Navigation("SetSessions");
                });

            modelBuilder.Entity("workout_tracker_backend.Models.Set", b =>
                {
                    b.Navigation("SetSessions");
                });

            modelBuilder.Entity("workout_tracker_backend.Models.User", b =>
                {
                    b.Navigation("Exercises");

                    b.Navigation("WorkoutSessions");

                    b.Navigation("Workouts");
                });

            modelBuilder.Entity("workout_tracker_backend.Models.Workout", b =>
                {
                    b.Navigation("WorkoutSessions");
                });

            modelBuilder.Entity("workout_tracker_backend.Models.WorkoutSession", b =>
                {
                    b.Navigation("ExerciseSessions");
                });
#pragma warning restore 612, 618
        }
    }
}
